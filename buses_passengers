/**
Write a solution to report the number of users that used each bus.
Return the result table ordered by bus_id in ascending order.
Bus_id contains unique values.
Each row of this table contains information about the arrival time of a bus at the LeetCode station and its capacity 
(the number of empty seats it has).
No two buses will arrive at the same time and all bus capacities will be positive integers.
passenger_id contains unique values.
Each row of this table contains information about the arrival time of a passenger at the LeetCode station.
Buses and passengers arrive at the LeetCode station. If a bus arrives at the station at a time tbus and a passenger 
arrived at a time tpassenger where tpassenger <= tbus and the passenger did not catch any bus, the passenger will use that bus. 
In addition, each bus has a capacity. If at the moment the bus arrives at the station there are more passengers waiting than its 
capacity capacity, only capacity passengers will use the bus.
**/


drop table if exists buses;
create table buses
(
	bus_id			int unique,
	arrival_time	int,
	capacity		int
);

drop table if exists Passengers;
create table Passengers
(
	passenger_id	int unique,
	arrival_time	int
);


insert into buses values (1,2,1);
insert into buses values (2,4,10);
insert into buses values (3,7,2);

insert into Passengers values(11,1);
insert into Passengers values(12,1);
insert into Passengers values(13,5);
insert into Passengers values(14,6);
insert into Passengers values(15,7);

select * from buses;
select * from Passengers;


--SOLUTION


with recursive cte as (
	select rn, bus_id, capacity, tot_passengers,
	least(capacity, tot_passengers) as onboarded_bus,
	least(capacity, tot_passengers) as total_onboarded_bus
	from cte_data
	where rn = 1
		union all
	select d.rn, d.bus_id, d.capacity, d.tot_passengers,
	least(d.capacity, d.tot_passengers - cte.total_onboarded_bus) as onboarded_bus,
	cte.total_onboarded_bus + least(d.capacity, d.tot_passengers - cte.total_onboarded_bus) as total_onboarded_bus
	from cte
	join cte_data as d on d.rn = cte.rn+1
)

,cte_data as (
select row_number() over(order by bus_id) as rn,
b.bus_id, b.capacity, count(p.passenger_id) as tot_passengers
from buses as b
join passengers as p on p.arrival_time <= b.arrival_time
group by 2,3
order by 1
)

select bus_id, onboarded_bus as passengers_cnt
from cte
order by bus_id
